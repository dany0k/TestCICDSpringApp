version: "v24.0.7"

services:
  test-postgres-db:
    image: postgres:14-alpine
    container_name: test-postgres-db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    restart: always
    networks:
      - test-app
    healthcheck:
      test: [ "CMD", "pg_isready","-d","postgres","-U","postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - /var/lib/postgresql/data

  first-module:
    image: zmamz/first-module:latest
    build:
      dockerfile: Dockerfile
      context: FirstModule
    restart: always
    container_name: first-module
    networks:
      - test-app
    ports:
      - "8080:8080"
    depends_on:
      test-postgres-db:
        condition: service_healthy
      minio:
        condition: service_started

  second-module:
    image: zmamz/second-module:latest
    build:
      dockerfile: Dockerfile
      context: SecondModule
    restart: always
    container_name: second-module
    networks:
      - test-app
    ports:
      - "8081:8081"
    depends_on:
      test-postgres-db:
        condition: service_started
      minio:
        condition: service_started

  minio:
    image: minio/minio:latest
    command: server --console-address ":9090" /data/
    ports:
      - "9000:9000"
      - "9090:9090"
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET}
    volumes:
      - ~/minio/data:/data
    networks:
      test-app:

volumes:
  minio-storage:

networks:
  test-app:
    driver: bridge
